{
	"Create A Quick Subroutine": {
		"prefix": "sub",
		"body": [
			"Sub $1($2)",
			"\t$3",
            "End Sub"
		],
		"description": "Create a quick subroutine"
	},
	"Create A Private Subroutine": {
		"prefix": "private sub",
		"body": [
			"Private Sub $1($2)",
			"\t$3",
            "End Sub"
		],
		"description": "Create a private subroutine"
	},
	"Create A Public Subroutine": {
		"prefix": "public sub",
		"body": [
			"Public Sub $1($2)",
			"\t$3",
            "End Sub"
		],
		"description": "Create a public subroutine"
	},

	"Create A Quick Function": {
		"prefix": "function",
		"body": [
			"Sub $1($2) As $3",
			"\t$4",
            "End Sub"
		],
		"description": "Create a function"
	},
	"Create A Private Function": {
		"prefix": "private function",
		"body": [
			"Private Sub $1($2) As $3",
			"\t$4",
            "End Sub"
		],
		"description": "Create a private function"
	},
	"Create A Public Function": {
		"prefix": "public function",
		"body": [
			"Public Sub $1($2) As $3",
			"\t$4",
            "End Sub"
		],
		"description": "Create a public function"
	},

	"Create A Private Object Property": {
		"prefix": "private object property",
		"body": [
			"Private Sub get$1 As $2",
			"\tDim mObject As $2 : mObject.initialize",
			"\tIf Not(fProperties.ContainsKey(\"$1\")) Then",
			"\t\tfProperties.Put(\"$1\", mObject.fProperties)",
			"\tEnd If",
			"\tDim ObjectToReturn As $2 : ObjectToReturn.initialize",
			"\tObjectToReturn.fProperties = fProperties.Get(\"$1\")",
			"\tReturn ObjectToReturn",
            "End Sub",
			"Private Sub set$1(aValue As $2)",
			"\tfProperties.Put(\"$1\", aValue.fproperties)",
            "End Sub"
		],
		"description": "Create a private object property"
	},
	"Create A Public Object Property": {
		"prefix": "public object property",
		"body": [
			"Public Sub get$1 As $2",
			"\tDim mObject As $2 : mObject.initialize",
			"\tIf Not(fProperties.ContainsKey(\"$1\")) Then",
			"\t\tfProperties.Put(\"$1\", mObject.fProperties)",
			"\tEnd If",
			"\tDim ObjectToReturn As $2 : ObjectToReturn.initialize",
			"\tObjectToReturn.fProperties = fProperties.Get(\"$1\")",
			"\tReturn ObjectToReturn",
            "End Sub",
			"Public Sub set$1(aValue As $2)",
			"\tfProperties.Put(\"$1\", aValue.fproperties)",
            "End Sub"
		],
		"description": "Create a public object property"
	},

	"Create A Private List Property": {
		"prefix": "private list property",
		"body": [
			"Private Sub get$1 As List",
			"\tDim EmptyList As List : EmptyList.initialize",
			"\tIf Not(fProperties.ContainsKey(\"$1\")) Then",
			"\t\tfProperties.Put(\"$1\", EmptyList)",
			"\tEnd If",
			"\tReturn fProperties.Get(\"$1\")",
            "End Sub",
			"Private Sub set$1(aValue As List)",
			"\tfProperties.Put(\"$1\", aValue)",
            "End Sub"
		],
		"description": "Create a private list property"
	},
	"Create A Public List Property": {
		"prefix": "public list property",
		"body": [
			"Public Sub get$1 As List",
			"\tDim EmptyList As List : EmptyList.initialize",
			"\tIf Not(fProperties.ContainsKey(\"$1\")) Then",
			"\t\tfProperties.Put(\"$1\", EmptyList)",
			"\tEnd If",
			"\tReturn fProperties.Get(\"$1\")",
            "End Sub",
			"Public Sub set$1(aValue As List)",
			"\tfProperties.Put(\"$1\", aValue)",
            "End Sub"
		],
		"description": "Create a public list property"
	},

	"Create A Private String Property": {
		"prefix": "private string property",
		"body": [
			"Private Sub get$1 As String",
			"\tIf Not(fProperties.ContainsKey(\"$1\")) Then",
			"\t\tfProperties.Put(\"$1\", \"\")",
			"\tEnd If",
			"\tReturn fProperties.Get(\"$1\")",
            "End Sub",
			"Private Sub set$1(aValue As String)",
			"\tfProperties.Put(\"$1\", aValue)",
            "End Sub"
		],
		"description": "Create a private string property"
	},
	"Create A Public String Property": {
		"prefix": "public string property",
		"body": [
			"Public Sub get$1 As String",
			"\tIf Not(fProperties.ContainsKey(\"$1\")) Then",
			"\t\tfProperties.Put(\"$1\", \"\")",
			"\tEnd If",
			"\tReturn fProperties.Get(\"$1\")",
            "End Sub",
			"Public Sub set$1(aValue As String)",
			"\tfProperties.Put(\"$1\", aValue)",
            "End Sub"
		],
		"description": "Create a public string property"
	},

	"Create A Private Integer Property": {
		"prefix": "private int property",
		"body": [
			"Private Sub get$1 As Int",
			"\tIf Not(fProperties.ContainsKey(\"$1\")) Then",
			"\t\tfProperties.Put(\"$1\", 0)",
			"\tEnd If",
			"\tReturn fProperties.Get(\"$1\")",
            "End Sub",
			"Private Sub set$1(aValue As Int)",
			"\tfProperties.Put(\"$1\", aValue)",
            "End Sub"
		],
		"description": "Create a private int property"
	},
	"Create A Public Integer Property": {
		"prefix": "public int property",
		"body": [
			"Public Sub get$1 As Int",
			"\tIf Not(fProperties.ContainsKey(\"$1\")) Then",
			"\t\tfProperties.Put(\"$1\", 0)",
			"\tEnd If",
			"\tReturn fProperties.Get(\"$1\")",
            "End Sub",
			"Public Sub set$1(aValue As Int)",
			"\tfProperties.Put(\"$1\", aValue)",
            "End Sub"
		],
		"description": "Create a public int property"
	},

	"Create A Private Double Property": {
		"prefix": "private double property",
		"body": [
			"Private Sub get$1 As Double",
			"\tIf Not(fProperties.ContainsKey(\"$1\")) Then",
			"\t\tfProperties.Put(\"$1\", 0)",
			"\tEnd If",
			"\tReturn fProperties.Get(\"$1\")",
            "End Sub",
			"Private Sub set$1(aValue As Double)",
			"\tfProperties.Put(\"$1\", aValue)",
            "End Sub"
		],
		"description": "Create a private double property"
	},
	"Create A Public Double Property": {
		"prefix": "public double property",
		"body": [
			"Public Sub get$1 As Double",
			"\tIf Not(fProperties.ContainsKey(\"$1\")) Then",
			"\t\tfProperties.Put(\"$1\", 0)",
			"\tEnd If",
			"\tReturn fProperties.Get(\"$1\")",
            "End Sub",
			"Public Sub set$1(aValue As Double)",
			"\tfProperties.Put(\"$1\", aValue)",
            "End Sub"
		],
		"description": "Create a public double property"
	},

	"Create A Private Boolean Property": {
		"prefix": "private bool property",
		"body": [
			"Private Sub get$1 As Boolean",
			"\tIf Not(fProperties.ContainsKey(\"$1\")) Then",
			"\t\tfProperties.Put(\"$1\", False.As(Boolean))",
			"\tEnd If",
			"\tReturn fProperties.Get(\"$1\")",
            "End Sub",
			"Private Sub set$1(aValue As Boolean)",
			"\tfProperties.Put(\"$1\", aValue)",
            "End Sub"
		],
		"description": "Create a private bool property"
	},
	"Create A Public Boolean Property": {
		"prefix": "public bool property",
		"body": [
			"Public Sub get$1 As Boolean",
			"\tIf Not(fProperties.ContainsKey(\"$1\")) Then",
			"\t\tfProperties.Put(\"$1\", False.As(Boolean))",
			"\tEnd If",
			"\tReturn fProperties.Get(\"$1\")",
            "End Sub",
			"Public Sub set$1(aValue As Boolean)",
			"\tfProperties.Put(\"$1\", aValue)",
            "End Sub"
		],
		"description": "Create a public bool property"
	}
}